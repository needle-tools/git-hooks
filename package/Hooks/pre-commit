#!/bin/sh

# This is a pre-commit hook that ensures attempts to commit files that are
# are larger than $limit to your _local_ repo fail, with a helpful error message.

# You can override the default limit of 5MB by supplying the environment variable:
# GIT_FILE_SIZE_LIMIT=42000000 git commit -m "This commit is allowed file sizes up to 42MB"

# Maximum file size limit in bytes
limit=${GIT_FILE_SIZE_LIMIT:-100000000} # Default 100MB
limitInMB=$(( $limit / 10**6 ))

# Move to the repo root so git files paths make sense
repo_root=$( git rev-parse --show-toplevel )
cd $repo_root

empty_tree=$( git hash-object -t tree /dev/null )

if git rev-parse --verify HEAD > /dev/null 2>&1
then
	against=HEAD
else
	against="$empty_tree"
fi

# Set split so that for loop below can handle spaces in file names by splitting on line breaks
IFS='
'

echo "Checking staged file sizes"
shouldFail=false
for file in $( git diff-index --cached --name-only $against ); do
	file_size=$(([ ! -f $file ] && echo 0) || (ls -la $file | awk '{ print $5 }'))
	if [ "$file_size" -gt  "$limit" ]; then
      	echo "-------------------------------------------------------------------------"
      	echo "ðŸ”¥ Your commit was rejected because it contains files larger than $limitInMB MB ðŸ”¥"
	    echo "File $file is $(( $file_size / 10**6 )) MB, which is larger than our configured limit of $limitInMB MB"
      	echo "-------------------------------------------------------------------------"
        shouldFail=true
	fi
done

if $shouldFail
then
    exit 1;
fi